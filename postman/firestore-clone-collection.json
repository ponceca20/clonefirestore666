{
  "info": {
    "name": "Firestore Clone API - Comprehensive",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "_postman_id": "firestore-clone-collection-comprehensive"
  },
  "item": [
    {
      "name": "Auth",
      "item": [
        {
          "name": "Register",
          "request": {
            "method": "POST",
            "header": [{ "key": "Content-Type", "value": "application/json" }],
            "url": { "raw": "{{base_url}}/api/v1/auth/register", "host": ["{{base_url}}"], "path": ["api", "v1", "auth", "register"] },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"testuser_{{$randomInt}}@example.com\",\n  \"password\": \"Password123!\",\n  \"firstName\": \"Test\",\n  \"lastName\": \"User\",\n  \"tenantId\": \"defaultTenant{{$randomInt}}\",\n  \"organizationId\": \"org{{$randomInt}}\"\n}"
            }
          }
        },
        {
          "name": "Login",
          "request": {
            "method": "POST",
            "header": [{ "key": "Content-Type", "value": "application/json" }],
            "url": { "raw": "{{base_url}}/api/v1/auth/login", "host": ["{{base_url}}"], "path": ["api", "v1", "auth", "login"] },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"testuser1@example.com\",\n  \"password\": \"Password123!\",\n  \"tenantId\": \"defaultTenant1\"\n}"
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "var data = pm.response.json();",
                  "pm.environment.set(\"accessToken\", data.accessToken);",
                  "pm.environment.set(\"refreshToken\", data.refreshToken);",
                  "if(data.user && data.user.userId) { pm.environment.set(\"userId\", data.user.userId); }",
                  "if(data.user && data.user.tenantId) { pm.environment.set(\"tenantId\", data.user.tenantId); }",
                  "if(data.user && data.user.organizationId) { pm.environment.set(\"defaultOrganizationId\", data.user.organizationId); }"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Refresh Token",
          "request": {
            "method": "POST",
            "header": [{ "key": "Content-Type", "value": "application/json" }],
            "url": { "raw": "{{base_url}}/api/v1/auth/refresh", "host": ["{{base_url}}"], "path": ["api", "v1", "auth", "refresh"] },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"refreshToken\": \"{{refreshToken}}\"\n}"
            },
            "event": [
              {
                "listen": "test",
                "script": {
                  "exec": [
                    "var data = pm.response.json();",
                    "pm.environment.set(\"accessToken\", data.accessToken);",
                    "pm.environment.set(\"refreshToken\", data.refreshToken);"
                  ],
                  "type": "text/javascript"
                }
              }
            ]
          }
        },
        {
          "name": "Logout",
          "request": {
            "method": "POST",
            "header": [{ "key": "Authorization", "value": "Bearer {{accessToken}}" }],
            "url": { "raw": "{{base_url}}/api/v1/auth/logout", "host": ["{{base_url}}"], "path": ["api", "v1", "auth", "logout"] }
          }
        },
        {
          "name": "Get Current User (Me)",
          "request": {
            "method": "GET",
            "header": [{ "key": "Authorization", "value": "Bearer {{accessToken}}" }],
            "url": { "raw": "{{base_url}}/api/v1/auth/me", "host": ["{{base_url}}"], "path": ["api", "v1", "auth", "me"] }
          }
        },
        {
          "name": "Update Current User (Me)",
          "request": {
            "method": "PUT",
            "header": [
              { "key": "Content-Type", "value": "application/json" },
              { "key": "Authorization", "value": "Bearer {{accessToken}}" }
            ],
            "url": { "raw": "{{base_url}}/api/v1/auth/me", "host": ["{{base_url}}"], "path": ["api", "v1", "auth", "me"] },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"firstName\": \"UpdatedFirstName\",\n  \"lastName\": \"UpdatedLastName\",\n  \"phone\": \"1234567890\"\n}"
            }
          }
        },
        {
          "name": "Change Password",
          "request": {
            "method": "POST",
            "header": [
              { "key": "Content-Type", "value": "application/json" },
              { "key": "Authorization", "value": "Bearer {{accessToken}}" }
            ],
            "url": { "raw": "{{base_url}}/api/v1/auth/change-password", "host": ["{{base_url}}"], "path": ["api", "v1", "auth", "change-password"] },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"oldPassword\": \"Password123!\",\n  \"newPassword\": \"NewPassword456!\"\n}"
            }
          }
        },
        {
          "name": "Admin",
          "item": [
            {
              "name": "List Users",
              "request": {
                "method": "GET",
                "header": [
                    { "key": "Authorization", "value": "Bearer {{accessToken}}" },
                    { "key": "X-Tenant-ID", "value": "{{tenantId}}" }
                ],
                "url": { "raw": "{{base_url}}/api/v1/auth/admin/users", "host": ["{{base_url}}"], "path": ["api", "v1", "auth", "admin", "users"] }
              }
            },
            {
              "name": "Get User by ID",
              "request": {
                "method": "GET",
                "header": [
                    { "key": "Authorization", "value": "Bearer {{accessToken}}" },
                    { "key": "X-Tenant-ID", "value": "{{tenantId}}" }
                ],
                "url": { "raw": "{{base_url}}/api/v1/auth/admin/users/{{userIdToManage}}", "host": ["{{base_url}}"], "path": ["api", "v1", "auth", "admin", "users", "{{userIdToManage}}"] }
              }
            },
            {
              "name": "Delete User by ID",
              "request": {
                "method": "DELETE",
                "header": [
                    { "key": "Authorization", "value": "Bearer {{accessToken}}" },
                    { "key": "X-Tenant-ID", "value": "{{tenantId}}" }
                ],
                "url": { "raw": "{{base_url}}/api/v1/auth/admin/users/{{userIdToManage}}", "host": ["{{base_url}}"], "path": ["api", "v1", "auth", "admin", "users", "{{userIdToManage}}"] }
              }
            }
          ]
        }
      ]
    },
    {
      "name": "Organizations",
      "item": [
        {
          "name": "Create Organization",
          "request": {
            "method": "POST",
            "header": [
              { "key": "Content-Type", "value": "application/json" },
              { "key": "Authorization", "value": "Bearer {{accessToken}}" }
            ],
            "url": { "raw": "{{base_url}}/api/v1/organizations", "host": ["{{base_url}}"], "path": ["api", "v1", "organizations"] },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"organizationId\": \"myorg{{$randomInt}}\",\n  \"displayName\": \"My Test Organization {{$randomInt}}\",\n  \"billingEmail\": \"billing{{$randomInt}}@myorg.com\"\n}"
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "var data = pm.response.json();",
                  "if(data && data.organizationId) { pm.environment.set(\"organizationId\", data.organizationId); }"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "List Organizations",
          "request": {
            "method": "GET",
            "header": [{ "key": "Authorization", "value": "Bearer {{accessToken}}" }],
            "url": { "raw": "{{base_url}}/api/v1/organizations", "host": ["{{base_url}}"], "path": ["api", "v1", "organizations"] }
          }
        },
        {
          "name": "Get Organization",
          "request": {
            "method": "GET",
            "header": [{ "key": "Authorization", "value": "Bearer {{accessToken}}" }],
            "url": { "raw": "{{base_url}}/api/v1/organizations/{{organizationId}}", "host": ["{{base_url}}"], "path": ["api", "v1", "organizations", "{{organizationId}}"] }
          }
        },
        {
          "name": "Update Organization",
          "request": {
            "method": "PUT",
            "header": [
              { "key": "Content-Type", "value": "application/json" },
              { "key": "Authorization", "value": "Bearer {{accessToken}}" }
            ],
            "url": { "raw": "{{base_url}}/api/v1/organizations/{{organizationId}}", "host": ["{{base_url}}"], "path": ["api", "v1", "organizations", "{{organizationId}}"] },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"displayName\": \"My Updated Org Name\",\n  \"description\": \"Updated description for the org\"\n}"
            }
          }
        },
        {
          "name": "Delete Organization",
          "request": {
            "method": "DELETE",
            "header": [{ "key": "Authorization", "value": "Bearer {{accessToken}}" }],
            "url": { "raw": "{{base_url}}/api/v1/organizations/{{organizationId}}", "host": ["{{base_url}}"], "path": ["api", "v1", "organizations", "{{organizationId}}"] }
          }
        }
      ]
    },
    {
      "name": "Firestore",
      "item": [
        {
          "name": "Documents",
          "item": [
            {
              "name": "Create Document",
              "request": {
                "method": "POST",
                "header": [
                  { "key": "Content-Type", "value": "application/json" },
                  { "key": "Authorization", "value": "Bearer {{accessToken}}" },
                  { "key": "X-Organization-ID", "value": "{{organizationId}}" }
                ],
                "url": {
                  "raw": "{{base_url}}/api/v1/v1/organizations/{{organizationId}}/projects/{{projectId}}/databases/{{databaseId}}/documents/{{collectionId}}",
                  "host": ["{{base_url}}"],
                  "path": ["api", "v1", "v1", "organizations", "{{organizationId}}", "projects", "{{projectId}}", "databases", "{{databaseId}}", "documents", "{{collectionId}}"]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"name\": \"My Item {{$randomInt}}\",\n  \"quantity\": {{$randomInt}},\n  \"active\": true,\n  \"tags\": [\"tag1\", \"tag2\"]\n}"
                }
              },
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "var data = pm.response.json();",
                      "if(data && data.documentId) { pm.environment.set(\"documentId\", data.documentId); }"
                    ],
                    "type": "text/javascript"
                  }
                }
              ]
            },
            {
              "name": "Get Document",
              "request": {
                "method": "GET",
                "header": [
                  { "key": "Authorization", "value": "Bearer {{accessToken}}" },
                  { "key": "X-Organization-ID", "value": "{{organizationId}}" }
                ],
                "url": {
                  "raw": "{{base_url}}/api/v1/v1/organizations/{{organizationId}}/projects/{{projectId}}/databases/{{databaseId}}/documents/{{collectionId}}/{{documentId}}",
                  "host": ["{{base_url}}"],
                  "path": ["api", "v1", "v1", "organizations", "{{organizationId}}", "projects", "{{projectId}}", "databases", "{{databaseId}}", "documents", "{{collectionId}}", "{{documentId}}"]
                }
              }
            },
            {
              "name": "Update Document (PUT)",
              "request": {
                "method": "PUT",
                "header": [
                  { "key": "Content-Type", "value": "application/json" },
                  { "key": "Authorization", "value": "Bearer {{accessToken}}" },
                  { "key": "X-Organization-ID", "value": "{{organizationId}}" }
                ],
                "url": {
                  "raw": "{{base_url}}/api/v1/v1/organizations/{{organizationId}}/projects/{{projectId}}/databases/{{databaseId}}/documents/{{collectionId}}/{{documentId}}",
                  "host": ["{{base_url}}"],
                  "path": ["api", "v1", "v1", "organizations", "{{organizationId}}", "projects", "{{projectId}}", "databases", "{{databaseId}}", "documents", "{{collectionId}}", "{{documentId}}"]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"name\": \"Updated Item Name\",\n  \"quantity\": 999,\n  \"active\": false,\n  \"description\": \"This is an updated item.\"\n}"
                }
              }
            },
            {
              "name": "Patch Document (PATCH)",
              "request": {
                "method": "PATCH",
                "header": [
                  { "key": "Content-Type", "value": "application/json" },
                  { "key": "Authorization", "value": "Bearer {{accessToken}}" },
                  { "key": "X-Organization-ID", "value": "{{organizationId}}" }
                ],
                "url": {
                  "raw": "{{base_url}}/api/v1/v1/organizations/{{organizationId}}/projects/{{projectId}}/databases/{{databaseId}}/documents/{{collectionId}}/{{documentId}}",
                  "host": ["{{base_url}}"],
                  "path": ["api", "v1", "v1", "organizations", "{{organizationId}}", "projects", "{{projectId}}", "databases", "{{databaseId}}", "documents", "{{collectionId}}", "{{documentId}}"]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"quantity\": 50,\n  \"notes\": \"Patched notes added.\"\n}"
                }
              }
            },
            {
              "name": "Delete Document",
              "request": {
                "method": "DELETE",
                "header": [
                  { "key": "Authorization", "value": "Bearer {{accessToken}}" },
                  { "key": "X-Organization-ID", "value": "{{organizationId}}" }
                ],
                "url": {
                  "raw": "{{base_url}}/api/v1/v1/organizations/{{organizationId}}/projects/{{projectId}}/databases/{{databaseId}}/documents/{{collectionId}}/{{documentId}}",
                  "host": ["{{base_url}}"],
                  "path": ["api", "v1", "v1", "organizations", "{{organizationId}}", "projects", "{{projectId}}", "databases", "{{databaseId}}", "documents", "{{collectionId}}", "{{documentId}}"]
                }
              }
            },
            {
              "name": "List Documents in Collection (GET with Query Params)",
              "request": {
                "method": "GET",
                "header": [
                  { "key": "Authorization", "value": "Bearer {{accessToken}}" },
                  { "key": "X-Organization-ID", "value": "{{organizationId}}" }
                ],
                "url": {
                  "raw": "{{base_url}}/api/v1/v1/organizations/{{organizationId}}/projects/{{projectId}}/databases/{{databaseId}}/documents/{{collectionId}}?limit=10&offset=0&orderBy=name:asc&filter_quantity_gt=5",
                  "host": ["{{base_url}}"],
                  "path": ["api", "v1", "v1", "organizations", "{{organizationId}}", "projects", "{{projectId}}", "databases", "{{databaseId}}", "documents", "{{collectionId}}"],
                  "query": [
                    {"key": "limit", "value": "10"},
                    {"key": "offset", "value": "0"},
                    {"key": "orderBy", "value": "name:asc"},
                    {"key": "filter_quantity_gt", "value": "5"}
                  ]
                }
              }
            },
            {
              "name": "Query Documents (POST with Body)",
              "request": {
                "method": "POST",
                "header": [
                  { "key": "Content-Type", "value": "application/json" },
                  { "key": "Authorization", "value": "Bearer {{accessToken}}" },
                  { "key": "X-Organization-ID", "value": "{{organizationId}}" }
                ],
                "url": {
                  "raw": "{{base_url}}/api/v1/v1/organizations/{{organizationId}}/projects/{{projectId}}/databases/{{databaseId}}/query/{{collectionId}}",
                  "host": ["{{base_url}}"],
                  "path": ["api", "v1", "v1", "organizations", "{{organizationId}}", "projects", "{{projectId}}", "databases", "{{databaseId}}", "query", "{{collectionId}}"]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"filters\": [\n    { \"field\": \"active\", \"op\": \"==\", \"value\": true },\n    { \"field\": \"quantity\", \"op\": \">\", \"value\": 10 }\n  ],\n  \"orderBy\": [\n    { \"field\": \"name\", \"direction\": \"asc\" }\n  ],\n  \"limit\": 5\n}"
                }
              }
            }
          ]
        },
        {
          "name": "Collections",
          "item": [
            {
              "name": "List Collection IDs",
              "request": {
                "method": "GET",
                "header": [
                  { "key": "Authorization", "value": "Bearer {{accessToken}}" },
                  { "key": "X-Organization-ID", "value": "{{organizationId}}" }
                ],
                "url": {
                  "raw": "{{base_url}}/api/v1/v1/organizations/{{organizationId}}/projects/{{projectId}}/databases/{{databaseId}}/collections",
                  "host": ["{{base_url}}"],
                  "path": ["api", "v1", "v1", "organizations", "{{organizationId}}", "projects", "{{projectId}}", "databases", "{{databaseId}}", "collections"]
                }
              }
            }
          ]
        },
        {
          "name": "Batch Operations",
          "item": [
            {
              "name": "Batch Write",
              "request": {
                "method": "POST",
                "header": [
                  { "key": "Content-Type", "value": "application/json" },
                  { "key": "Authorization", "value": "Bearer {{accessToken}}" },
                  { "key": "X-Organization-ID", "value": "{{organizationId}}" }
                ],
                "url": {
                  "raw": "{{base_url}}/api/v1/v1/organizations/{{organizationId}}/projects/{{projectId}}/databases/{{databaseId}}/batchWrite",
                  "host": ["{{base_url}}"],
                  "path": ["api", "v1", "v1", "organizations", "{{organizationId}}", "projects", "{{projectId}}", "databases", "{{databaseId}}", "batchWrite"]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"writes\": [\n    {\n      \"type\": \"create\",\n      \"collectionId\": \"{{collectionId}}\",\n      \"documentId\": \"batchDoc1\",\n      \"data\": { \"fieldA\": \"valueA1\", \"fieldB\": 100 }\n    },\n    {\n      \"type\": \"update\",\n      \"collectionId\": \"{{collectionId}}\",\n      \"documentId\": \"{{documentId}}\",\n      \"data\": { \"fieldB\": 200, \"newField\": \"added\" }\n    },\n    {\n      \"type\": \"delete\",\n      \"collectionId\": \"{{collectionId}}\",\n      \"documentId\": \"docToDelete\"\n    }\n  ]\n}"
                }
              }
            }
          ]
        },
        {
            "name": "Realtime (WebSocket)",
            "request": {
                "method": "GET",
                "header": [],
                "url": {
                    "raw": "{{base_url_ws}}/ws/v1/listen/organizations/{{organizationId}}/projects/{{projectId}}/databases/{{databaseId}}/documents/{{collectionId}}/{{documentId}}?token={{accessToken}}",
                    "protocol": "ws",
                    "host": ["{{base_url_ws_host}}"],
                    "path": ["ws", "v1", "listen", "organizations", "{{organizationId}}", "projects", "{{projectId}}", "databases", "{{databaseId}}", "documents", "{{collectionId}}", "{{documentId}}"],
                    "query": [
                        {
                            "key": "token",
                            "value": "{{accessToken}}"
                        }
                    ]
                },
                "description": "Connect to WebSocket for real-time updates. Replace `{{base_url_ws}}` with your WebSocket server address (e.g., `ws://localhost:3030`). The path structure should match your API. Use a WebSocket client (like Postman's built-in one, or others) to test this. The token is passed as a query parameter."
            }
        }
      ]
    }
  ],
  "event": [],
  "variable": [
    { "key": "base_url", "value": "http://localhost:3030" },
    { "key": "base_url_ws", "value": "ws://localhost:3030"},
    { "key": "base_url_ws_host", "value": "localhost:3030"},
    { "key": "accessToken", "value": "" },
    { "key": "refreshToken", "value": "" },
    { "key": "userId", "value": "" },
    { "key": "tenantId", "value": "defaultTenant1" },
    { "key": "userIdToManage", "value": ""},
    { "key": "organizationId", "value": "myorg1" },
    { "key": "defaultOrganizationId", "value": "myorg1"},
    { "key": "projectId", "value": "proj1" },
    { "key": "databaseId", "value": "db1" },
    { "key": "collectionId", "value": "items" },
    { "key": "documentId", "value": "" }
  ]
}
